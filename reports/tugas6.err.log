Traceback (most recent call last):
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\triad\AppData\Local\Programs\Python\Python39\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
pca = PCA(n_components=2, random_state=42)
X_pca = pca.fit_transform(X_smote)

plt.figure(figsize=(8,6))
colors = plt.cm.get_cmap("tab10", len(le.classes_))
y_labels = le.inverse_transform(y_smote)
synthetic_mask = [not any((X_scaled == x).all() for x in X_scaled) for x in X_smote]

for i, cls in enumerate(le.classes_):
    idx_orig = (y_labels == cls) & (~np.array(synthetic_mask))
    idx_syn  = (y_labels == cls) & (np.array(synthetic_mask))
    plt.scatter(X_pca[idx_orig,0], X_pca[idx_orig,1], label=f"{cls} (orig)", s=40, color=colors(i))
    plt.scatter(X_pca[idx_syn,0], X_pca[idx_syn,1], label=f"{cls} (synthetic)", s=60, marker='x', color=colors(i))

plt.xlabel("PC1")
plt.ylabel("PC2")
plt.title("PCA 2D After SMOTE")
plt.legend(bbox_to_anchor=(1.05,1), loc="upper left", fontsize='small')
plt.tight_layout()
plt.show()
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[16], line 2[0m
[0;32m      1[0m pca [38;5;241m=[39m PCA(n_components[38;5;241m=[39m[38;5;241m2[39m, random_state[38;5;241m=[39m[38;5;241m42[39m)
[1;32m----> 2[0m X_pca [38;5;241m=[39m pca[38;5;241m.[39mfit_transform([43mX_smote[49m)
[0;32m      4[0m plt[38;5;241m.[39mfigure(figsize[38;5;241m=[39m([38;5;241m8[39m,[38;5;241m6[39m))
[0;32m      5[0m colors [38;5;241m=[39m plt[38;5;241m.[39mcm[38;5;241m.[39mget_cmap([38;5;124m"[39m[38;5;124mtab10[39m[38;5;124m"[39m, [38;5;28mlen[39m(le[38;5;241m.[39mclasses_))

[1;31mNameError[0m: name 'X_smote' is not defined

